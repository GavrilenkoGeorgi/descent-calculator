{"version":3,"sources":["components/calculator/CalcForm.module.sass","components/calculator/ResultsDisplay.module.sass","components/header/Header.module.sass","components/layout/Layout.module.sass","components/pages/CalcPage.module.sass","App.module.sass","components/header/Header.jsx","propTypes/propTypes.js","components/layout/Layout.jsx","hooks/useInput.js","components/calculator/CalcForm.jsx","components/calculator/ResultsDisplay.jsx","utils/descentCalculator.js","components/pages/CalcPage.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","classes","header","oneOfType","arrayOf","node","shape","name","string","isRequired","birth_year","Layout","children","layout","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","CalcForm","calculate","clearResults","currAlt","bindCurrAlt","resetCurrAlt","desAlt","bindDesAlt","resetDesAlt","descRate","bindDescRate","resetDescRate","grndSpeed","bindGrndSpeed","resetGrndSpeed","focused","setFocused","focusInput","console","log","blurInput","onSubmit","preventDefault","onReset","materialForm","cx","materialFormItem","hasValue","materialFormLabel","htmlFor","id","materialFormField","onFocus","onBlur","type","required","button","onClick","ResultsDisplay","results","styles","resultsRow","visible","ToD","descentTime","DescentCalculator","this","Number","altDiff","currentAltitude","destinationAltitude","descentRate","groundSpeed","altitudeDifference","difference","rate","speed","params","param","paramsOK","getTOD","getDescentTime","result","Math","round","CalcPage","calculator","initialResultsState","setResults","container","data","setParams","getResults","prevValue","App","appLayout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ca27a3c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"materialFormItem\":\"CalcForm_materialFormItem__2mSdN\",\"error\":\"CalcForm_error__2s0ct\",\"focused\":\"CalcForm_focused__3VxFc\",\"materialFormLabel\":\"CalcForm_materialFormLabel__3idIC\",\"hasValue\":\"CalcForm_hasValue__13nYu\",\"materialFormField\":\"CalcForm_materialFormField__2YJ-z\",\"button\":\"CalcForm_button__3nSIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsRow\":\"ResultsDisplay_resultsRow__2xpdf\",\"visible\":\"ResultsDisplay_visible__MSqlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2nLjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__32cy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CalcPage_container__1DuGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLayout\":\"App_appLayout__1U-UU\"};","import React from 'react'\n\nimport classes from './Header.module.sass'\n\nconst Header = () => {\n\treturn <header className={classes.header}>\n\t\tSimple GA Descent Caclulator\n\t</header>\n}\n\nexport default Header\n","import { arrayOf, node, oneOfType, shape, string } from 'prop-types'\n\nexport const children = oneOfType([\n\tarrayOf(node),\n\tnode\n])\n\nexport const person = shape({\n\tname: string.isRequired,\n\tbirth_year: string.isRequired\n})\n","import React from 'react'\nimport { children } from '../../propTypes'\n\nimport classes from './Layout.module.sass'\n\nconst Layout = ({ children }) => {\n\treturn <main className={classes.layout}>\n\t\t{children}\n\t</main>\n}\n\nLayout.propTypes = {\n\tchildren\n}\n\nexport default Layout\n","import { useState } from 'react'\n\nexport const useInput = initialValue => {\n\tconst [ value, setValue ] = useState(initialValue)\n\n\treturn {\n\t\tvalue,\n\t\tsetValue,\n\t\treset: () => setValue(''),\n\t\tbind: {\n\t\t\tvalue,\n\t\t\tonChange: event => {\n\t\t\t\tsetValue(event.target.value)\n\t\t\t}\n\t\t}\n\t}\n}\n","import React, { useState } from 'react'\nimport { func } from 'prop-types'\nimport { useInput } from '../../hooks/useInput'\n\nimport cx from 'classnames'\nimport classes from './CalcForm.module.sass'\n\nconst CalcForm = ({ calculate, clearResults }) => {\n\n\tconst { value: currAlt, bind: bindCurrAlt, reset: resetCurrAlt } = useInput('')\n\tconst { value: desAlt, bind: bindDesAlt, reset: resetDesAlt } = useInput('')\n\tconst { value: descRate, bind: bindDescRate, reset: resetDescRate } = useInput('')\n\tconst { value: grndSpeed, bind: bindGrndSpeed, reset: resetGrndSpeed } = useInput('')\n\n\tconst [ focused, setFocused ] = useState({})\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tconst data = {\n\t\t\tcurrAlt,\n\t\t\tdesAlt,\n\t\t\tdescRate,\n\t\t\tgrndSpeed\n\t\t}\n\t\tcalculate(data)\n\t}\n\n\tconst handleReset = () => {\n\t\tresetCurrAlt()\n\t\tresetDesAlt()\n\t\tresetDescRate()\n\t\tresetGrndSpeed()\n\t}\n\n\tconst focusInput = (event) => {\n\t\tconsole.log('Focusing on:', event.target.name)\n\t\tsetFocused({ [event.target.name]: true })\n\t}\n\n\tconst blurInput = (event) => {\n\t\tconsole.log('Bluring on:', event.target.name)\n\t\tsetFocused({ [event.target.name]: false })\n\t}\n\n\treturn <form\n\t\tonSubmit={handleSubmit}\n\t\tonReset={handleReset}\n\t\tclassName={classes.materialForm}\n\t>\n\t\t<fieldset>\n\t\t\t<legend>Set altitude <small><em>(feet)</em></small></legend>\n\t\t\t{/*current altitude*/}\n\t\t\t<div className={cx(classes.materialFormItem,\n\t\t\t\t{ [classes.focused]: focused.currAlt, [classes.hasValue]: currAlt })}>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classes.materialFormLabel}\n\t\t\t\t\thtmlFor=\"currAlt\"\n\t\t\t\t>\n\t\t\t\t\tCurrent altitude\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"currAlt\"\n\t\t\t\t\tclassName={classes.materialFormField}\n\t\t\t\t\tonFocus={focusInput}\n\t\t\t\t\tonBlur={blurInput}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tname=\"currAlt\"\n\t\t\t\t\trequired\n\t\t\t\t\t{...bindCurrAlt}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t{/*destination altitude*/}\n\t\t\t<div className={cx(classes.materialFormItem,\n\t\t\t\t{ [classes.focused]: focused.desAlt, [classes.hasValue]: desAlt })}>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classes.materialFormLabel}\n\t\t\t\t\thtmlFor=\"desAlt\"\n\t\t\t\t>\n\t\t\t\t\tDestination altitude\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"desAlt\"\n\t\t\t\t\tclassName={classes.materialFormField}\n\t\t\t\t\tonFocus={focusInput}\n\t\t\t\t\tonBlur={blurInput}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tname=\"desAlt\"\n\t\t\t\t\trequired\n\t\t\t\t\t{...bindDesAlt}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</fieldset>\n\n\t\t<fieldset>\n\t\t\t<legend>Set rate <small><em>(feet/min)</em>\n\t\t\t</small> and ground speed <small><em>(knots)</em></small>\n\t\t\t</legend>\n\t\t\t{/*descent rate*/}\n\t\t\t<div className={cx(classes.materialFormItem,\n\t\t\t\t{ [classes.focused]: focused.descRate, [classes.hasValue]: descRate })}>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classes.materialFormLabel}\n\t\t\t\t\thtmlFor=\"descRate\"\n\t\t\t\t>\n\t\t\t\t\tDescent rate\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"descRate\"\n\t\t\t\t\tclassName={classes.materialFormField}\n\t\t\t\t\tonFocus={focusInput}\n\t\t\t\t\tonBlur={blurInput}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tname=\"descRate\"\n\t\t\t\t\trequired\n\t\t\t\t\t{...bindDescRate}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t{/*ground speed*/}\n\t\t\t<div className={cx(classes.materialFormItem,\n\t\t\t\t{ [classes.focused]: focused.grndSpeed, [classes.hasValue]: grndSpeed })}>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classes.materialFormLabel}\n\t\t\t\t\thtmlFor=\"grndSpeed\"\n\t\t\t\t>\n\t\t\t\t\tGround speed\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"grndSpeed\"\n\t\t\t\t\tclassName={classes.materialFormField}\n\t\t\t\t\tonFocus={focusInput}\n\t\t\t\t\tonBlur={blurInput}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tname=\"grndSpeed\"\n\t\t\t\t\trequired\n\t\t\t\t\t{...bindGrndSpeed}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</fieldset>\n\n\t\t<fieldset>\n\t\t\t<input\n\t\t\t\tclassName={classes.button}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvalue=\"calculate\"\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={classes.button}\n\t\t\t\ttype=\"reset\"\n\t\t\t\tvalue=\"clear\"\n\t\t\t\tonClick={clearResults}\n\t\t\t/>\n\t\t</fieldset>\n\t</form>\n}\n\nCalcForm.propTypes= {\n\tcalculate: func.isRequired,\n\tclearResults: func.isRequired\n}\n\nexport default CalcForm\n","import React from 'react'\nimport { object } from 'prop-types'\nimport cx from 'classnames'\n\nimport classes from './ResultsDisplay.module.sass'\n\nconst ResultsDisplay = ({ results }) => {\n\n\tconst styles = cx(classes.resultsRow, { [classes.visible]: results.ToD })\n\n\treturn <article>\n\t\t<div className={styles}>\n\t\t\t<p>\n\t\t\t\t{results.ToD && <>{results.ToD}<br />\n\t\t\t\t\t<small><em>miles away</em></small></>}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t{results.descentTime && <>{results.descentTime}<br />\n\t\t\t\t\t<small><em>mins ETA</em></small></>}\n\t\t\t</p>\n\t\t</div>\n\t</article>\n}\n\nResultsDisplay.propTypes = {\n\tresults: object\n}\n\nexport default ResultsDisplay\n","// Top of descent calculator\n\nexport default class DescentCalculator {\n\n\tsetParams ({ currAlt, desAlt, descRate, grndSpeed }) {\n\t\tthis.currAlt = Number(currAlt)\n\t\tthis.desAlt = Number(desAlt)\n\t\tthis.descRate = Number(descRate) // RoD\n\t\tthis.grndSpeed = Number(grndSpeed) // GS\n\t\tthis.altDiff = currAlt - desAlt\n\n\t\treturn this\n\t}\n\n\tgetParams () {\n\t\treturn {\n\t\t\tcurrentAltitude: this.currAlt,\n\t\t\tdestinationAltitude: this.desAlt,\n\t\t\tdescentRate: this.descRate,\n\t\t\tgroundSpeed: this.grndSpeed,\n\t\t\taltitudeDifference: this.altDiff\n\t\t}\n\t}\n\n\tparamsOK () {\n\t\tconst difference = () => {\n\t\t\treturn this.currAlt > this.desAlt ? true : false\n\t\t}\n\t\tconst rate = () => {\n\t\t\treturn this.descRate > 0 && this.descRate <= 4000 ? true : false\n\t\t}\n\t\tconst speed = () => {\n\t\t\treturn this.grndSpeed > 0 && this.grndSpeed <= 1234.8 ? true : false\n\t\t}\n\n\t\tconst params = {\n\t\t\tdifference: difference(),\n\t\t\trate: rate(),\n\t\t\tspeed: speed()\n\t\t}\n\n\t\tif (difference() && rate() && speed()) {\n\t\t\treturn true\n\t\t} else {\n\t\t\tfor (const param in params) {\n\t\t\t\tif (!params[param]) {\n\t\t\t\t\tconsole.log(`Check your ${param} input.`)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t}\n\n\tgetResults () {\n\t\tif (this.paramsOK()) {\n\t\t\tconst results = {\n\t\t\t\tToD: this.getTOD(),\n\t\t\t\tdescentTime: this.getDescentTime()\n\t\t\t}\n\t\t\treturn results\n\t\t} else return null\n\t}\n\n\tgetTOD () {\n\t\tconst result = (this.altDiff / this.descRate) * (this.grndSpeed / 60)\n\t\treturn Math.round(result)\n\t}\n\n\tgetDescentTime () {\n\t\treturn Math.round(this.altDiff / this.descRate)\n\t}\n}\n","import React, { useState } from 'react'\n\nimport CalcForm from '../calculator/CalcForm'\nimport ResultsDisplay from '../calculator/ResultsDisplay'\nimport DescentCalculator from '../../utils/descentCalculator'\n\nimport classes from './CalcPage.module.sass'\n\nconst CalcPage = () => {\n\n\tconst calculator = new DescentCalculator\n\tconst initialResultsState = {\n\t\tToD: '',\n\t\tdescentTime: ''\n\t}\n\n\tconst [ results, setResults ] = useState(initialResultsState)\n\n\tconst handleFormData = data => {\n\t\tconst results = calculator.setParams(data).getResults()\n\t\tsetResults((prevValue) => ({ ...prevValue, ...results }))\n\t}\n\n\tconst clearResults = () => {\n\t\tsetResults(initialResultsState)\n\t}\n\n\treturn <section className={classes.container}>\n\t\t<h1>Top of descent</h1>\n\t\t<ResultsDisplay results={results} />\n\t\t<CalcForm calculate={handleFormData} clearResults={clearResults}/>\n\t</section>\n}\n\nexport default CalcPage\n","import React from 'react'\n\nimport Header from './components/header/Header'\nimport Layout from './components/layout/Layout'\nimport CalcPage from './components/pages/CalcPage'\n/* import Footer from './components/footer/Footer' */\n\nimport classes from './App.module.sass'\n\nconst App = () => {\n\treturn <div className={classes.appLayout}>\n\t\t<Header />\n\t\t<Layout>\n\t\t\t<CalcPage />\n\t\t</Layout>\n\t\t{/* <Footer /> */}\n\t</div>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker === null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType !== null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.')\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}